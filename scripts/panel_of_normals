#!/usr/bin/env python
import tempfile
from os.path import dirname, abspath, join, basename, isfile
import click
import os
import yaml
from ngs_utils.file_utils import splitext_plus
from ngs_utils.logger import err, critical

from umccrise.utils import get_loc, find_loc
from umccrise import panel_of_normals

import locale
try:
    if 'UTF-8' not in locale.getlocale(locale.LC_ALL):
        locale.setlocale(locale.LC_ALL, 'en_AU.UTF-8')
except TypeError:
    pass


here = dirname(abspath(panel_of_normals.__file__))


@click.command()
@click.argument('vcfs', nargs=-1, type=click.Path(exists=True))
@click.option('-g', 'genome', default='GRCh37')
@click.option('-o', 'output_dir', type=click.Path())
@click.option('-j', 'jobs', type=click.INT, default=1)
@click.option('-h', 'hits_thresholds')
def main(vcfs, genome, output_dir=None, jobs=1, hits_thresholds=None):
    config = {
        'samples': {splitext_plus(basename(v))[0]: abspath(v) for v in vcfs
                    if v.endswith('.vcf') or v.endswith('.vcf.gz')},
        'hits_thresholds': hits_thresholds.split(',') if hits_thresholds else [1, 2, 3],
    }

    loc = find_loc()

    if isfile(genome):
        config['reference_fasta'] = genome
    elif loc:
        config['reference_fasta'] = f'{genome}/seq/{genome}.fa'
    else:
        assert isfile(genome), 'File for genome fasta does not exist, and cannot automatically find it by location.'

    f = tempfile.NamedTemporaryFile(mode='wt', delete=False)
    yaml.dump(config, f)
    f.close()

    cmd = (f'snakemake ' +
           f'--snakefile {join(here, "Snakefile")} ' +
           f'--printshellcmds ' +
          (f'--directory {output_dir} ' if output_dir else ' ') +
           f'--configfile {f.name} '
           f'--jobs {jobs} ')
    print(cmd)
    os.system(cmd)


if __name__ == '__main__':
    main()
